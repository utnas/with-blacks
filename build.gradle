buildscript {
    ext {
        springBootVersion = '1.3.0.BUILD-SNAPSHOT'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {
    compile("com.google.guava:guava")
    compile("org.projectlombok:lombok:1.16.4")

    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("com.h2database:h2")
    compile("net.sf.dozer:dozer:5.4.0")
    compile('net.sf.dozer:dozer-spring:5.5.1')
    compile('org.xerial:sqlite-jdbc:3.7.2')

    // Testing
    compile("com.github.javafaker:javafaker:0.5")
    testCompile("org.mockito:mockito-core")
    testCompile("org.spockframework:spock-spring")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

jar{
    baseName = 'with-blacks-rest-service-core'
    version = '001-SNAPSHOT'
}

eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

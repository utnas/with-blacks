buildscript {
    ext {
        springBootVersion = '1.3.0.BUILD-SNAPSHOT'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
    configurations {
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {

    // Libraries
    compile("com.google.guava:guava")

    compile("org.projectlombok:lombok:1.16.4")

    compile("org.springframework.boot:spring-boot-starter-data-jpa") {
        exclude module: "spring-boot-starter-logging"
    }

    compile("org.springframework.boot:spring-boot-starter-data-rest") {
        exclude module: "spring-boot-starter-logging"
    }

    compile("org.springframework.boot:spring-boot-devtools")

    compile("org.springframework.security.oauth:spring-security-oauth2"){
        exclude module: "spring-boot-starter-logging"
    }

    compile('org.springframework.boot:spring-boot-starter-actuator') {
        exclude module: "spring-boot-starter-logging"
    }

    compile('org.springframework.boot:spring-boot-starter-aop') {
        exclude module: "spring-boot-starter-logging"
    }

    compile("com.h2database:h2")

    compile('postgresql:postgresql:9.1-901-1.jdbc4')

    // Testing
    testCompile("org.mockito:mockito-core")

    testCompile("org.spockframework:spock-spring")

    testCompile("org.springframework.boot:spring-boot-starter-test") {
        exclude module: "spring-boot-starter-logging"
    }

    compile('org.apache.logging.log4j:log4j-api:2.4.1')
    compile('org.apache.logging.log4j:log4j-core:2.4.1')

    // DevTools
    compile("org.springframework.boot:spring-boot-devtools")
}

jar {
    baseName = 'with-blacks-api'
    version = '001-SNAPSHOT'
}